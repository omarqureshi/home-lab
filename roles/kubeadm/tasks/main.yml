- name: Install containerd
  ansible.builtin.apt:
    name:
      - containerd
      - containernetworking-plugins
  become: yes

- name: Create containerd configuration directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'
    owner: root
    group: root
  become: yes

- name: Copy containerd configuration
  ansible.builtin.copy:
    src: files/containerd/config.toml
    dest: /etc/containerd/config.toml
  become: yes

- name: Create module file for Kubernetes
  ansible.builtin.file:
    path: /etc/modules-load.d/k8s.conf
    state: touch
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Load network overlay module on boot
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: overlay
  become: yes

- name: Load network overlay module immediately
  ansible.builtin.command:
    cmd: modprobe overlay
  become: yes

- name: Load bridged traffic module on boot
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: br_netfilter
  become: yes

- name: Load bridged traffic module immediately
  ansible.builtin.command:
    cmd: modprobe br_netfilter
  become: yes

- name: Configure network forwarding
  ansible.builtin.copy:
    src: files/kubernetes/network-forward.conf
    dest: /etc/sysctl.d/k8s.conf
    mode: '0644'
    owner: root
    group: root
  become: yes

- name: Refresh sysctl
  ansible.builtin.command:
    cmd: sysctl --system
  become: yes

- name: Install kubeadm dependencies
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
  become: yes

- name: Check key exists
  ansible.builtin.stat:
    path: /usr/share/keyrings/kubernetes-apt-keyring.gpg
  register: kubernetes_key

- name: Create tempfile
  ansible.builtin.tempfile:
    state: file
  register: gpgkey_temp
  when: not kubernetes_key.stat.exists
  become: yes

- name: Add Kubernetes public signing key
  ansible.builtin.get_url:
    url: https://prod-cdn.packages.k8s.io/repositories/isv:/kubernetes:/core:/stable:/v1.28/deb/Release.key
    dest: "{{ gpgkey_temp.path }}"
    owner: root
    group: root
    mode: '0644'
    force: true
  when: not kubernetes_key.stat.exists
  become: yes

- name: Dearmor key
  ansible.builtin.command:
    cmd: "gpg --dearmor -o /usr/share/keyrings/kubernetes-apt-keyring.gpg {{ gpgkey_temp.path }}"
  when: not kubernetes_key.stat.exists
  become: yes

- name: Add Kubernetes APT repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
    state: present
    filename: kubernetes
    update_cache: yes
  become: yes

- name: Install Kubernetes
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
  become: yes

- name: Hold kubelet
  dpkg_selections:
    name: kubelet
    selection: hold
  become: yes

- name: Hold kubectl
  dpkg_selections:
    name: kubectl
    selection: hold
  become: yes

- name: Hold kubeadm
  dpkg_selections:
    name: kubeadm
    selection: hold
  become: yes

- name: Download and install Flannel
  ansible.builtin.get_url:
    url: https://github.com/flannel-io/flannel/releases/download/v0.25.1/flanneld-arm64
    dest: /usr/local/bin/flanneld
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Create Flannel networks directory
  ansible.builtin.file:
    path: /var/lib/k8s/flannel/networks
    state: directory
    recurse: yes
    owner: root
    group: root
    mode: '0755'
  become: yes
